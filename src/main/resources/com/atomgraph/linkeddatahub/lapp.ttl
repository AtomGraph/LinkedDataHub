@base           <https://w3id.org/atomgraph/linkeddatahub/apps/domain> .

@prefix :	<#> .
@prefix apl:	<https://w3id.org/atomgraph/linkeddatahub/domain#> .
@prefix a:	<https://w3id.org/atomgraph/core#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix sd:	<http://www.w3.org/ns/sparql-service-description#> .
@prefix ldt:	<https://www.w3.org/ns/ldt#> .
@prefix sp:	<http://spinrdf.org/sp#> .
@prefix spin:	<http://spinrdf.org/spin#> .
@prefix spl:	<http://spinrdf.org/spl#> .
@prefix void:	<http://rdfs.org/ns/void#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix dct:	<http://purl.org/dc/terms/> .

: a owl:Ontology ;
    owl:imports apl:, ldt:, sp:, spin: ;
    rdfs:label "AtomGraph Application ontology" ;
    rdfs:comment "Ontology of AtomGraph applications" ;
    owl:versionInfo "1.1.4" .

# PROPERTIES

:adminApplication a owl:ObjectProperty, owl:FunctionalProperty, owl:InverseFunctionalProperty ;
    owl:inverseOf :endUserApplication ;
    rdfs:domain :EndUserApplication ;
    rdfs:range :AdminApplication ;
    rdfs:label "Admin application" ;
    rdfs:comment "Links end-user application to its administration application" ;
    rdfs:isDefinedBy : .

:endUserApplication a owl:ObjectProperty, owl:FunctionalProperty, owl:InverseFunctionalProperty ;
    owl:inverseOf :adminApplication ;
    rdfs:domain :AdminApplication ;
    rdfs:range :EndUserApplication ;
    rdfs:label "End-user application" ;
    rdfs:comment "Links administration application to its end-user application" ;
    rdfs:isDefinedBy : .

:proxy a owl:ObjectProperty ;
    # rdfs:domain :Application ;
    rdfs:range rdfs:Resource ;
    rdfs:label "Proxy" ;
    rdfs:comment "An intermediary server (such as cache) that proxies requests to service" ;
    rdfs:isDefinedBy : .

:public a owl:DatatypeProperty ;
    rdfs:domain :EndUserApplication ;
    rdfs:range xsd:boolean ;
    rdfs:label "Public" ;
    rdfs:comment "If true, this application can be listed as public (ACL still applies). If false, it is private and will not be listed" ;
    rdfs:isDefinedBy : .

# CLASSES

# application

:Application a rdfs:Class, owl:Class ;
    rdfs:subClassOf ldt:Application ;
    spin:constructor :ApplicationConstructor ;
    spin:constraint :OneBasePerHostName, :StartsWithHTTPS,
        [ a apl:MissingPropertyValue ;
            rdfs:label "Missing base URI" ;
            sp:arg1 ldt:base
        ] ,
        [ a apl:MissingPropertyValue ;
            rdfs:label "Missing SPARQL service" ;
            sp:arg1 ldt:service
        ] ,
        #[ a apl:MissingPropertyValue ;
        #    rdfs:label "Missing ontology" ;
        #    sp:arg1 ldt:ontology
        #] ,
        [ a apl:MissingPropertyValue ;
            rdfs:label "Missing title" ;
            sp:arg1 dct:title
        ] ;
    rdfs:label "Application" ;
    rdfs:comment "An application represents a data space identified by its base URI, in which application resource URIs are relative to the base URI. The only application interface (API) is read-write RESTful Linked data, backed by an RDF dataset accessible as a SPARQL 1.1 service. Application structure is defined in an ontology, which can import other ontologies." ;
    rdfs:isDefinedBy : .

:ApplicationConstructor a sp:Construct ;
    sp:text """
      PREFIX apl:     <https://w3id.org/atomgraph/linkeddatahub/domain#>
      PREFIX ldt:     <https://www.w3.org/ns/ldt#>

      CONSTRUCT {
          ?this ldt:base ?base ;
            # ldt:ontology ?ontology ;
            ldt:service [ a apl:Service ] .
      }
      WHERE {
          BIND (STRUUID() AS ?uuid)
          BIND (URI(CONCAT(?uuid, "/")) AS ?base)
          BIND (<https://w3id.org/atomgraph/linkeddatahub/admin#> AS ?ontology)
    }""" ;
    rdfs:label "Application constructor" ;
    rdfs:isDefinedBy : .

# client

:ClientApplication a rdfs:Class, owl:Class ;
    rdfs:subClassOf :Application ;
    rdfs:label "Client application" ;
    rdfs:comment "Application that acts as a Linked Data browser of itself and other LDT apps" ;
    rdfs:isDefinedBy : .

# end-user

:EndUserApplication a rdfs:Class, owl:Class ;
    rdfs:subClassOf :ClientApplication ;
    spin:constructor :EndUserApplicationConstructor ;
    spin:constraint [ a apl:MissingPropertyValue ;
            rdfs:label "Missing admin application" ;
            sp:arg1 :adminApplication
        ] ;
    rdfs:label "End-user application" ;
    rdfs:comment "Application with a dynamic access control and sitemap" ;
    rdfs:isDefinedBy : .

:EndUserApplicationConstructor a sp:Construct ;
    sp:text """
      PREFIX lapp:    <https://w3id.org/atomgraph/linkeddatahub/apps/domain#>
      PREFIX apl:     <https://w3id.org/atomgraph/linkeddatahub/domain#>
      PREFIX ac:      <https://w3id.org/atomgraph/client#>
      PREFIX xsd:     <http://www.w3.org/2001/XMLSchema#>
      PREFIX ldt:     <https://www.w3.org/ns/ldt#>
      PREFIX dct:     <http://purl.org/dc/terms/>

      CONSTRUCT {
          ?this dct:title [ a xsd:string ] ;
            dct:description [ a xsd:string ] ;
            lapp:adminApplication [ a lapp:AdminApplication ] ;
            ac:stylesheet [ a apl:File ] ;
            lapp:public [ a xsd:boolean ] .
      }
      WHERE {}""" ;
    rdfs:label "End-user application constructor" ;
    rdfs:isDefinedBy : .

# admin

:AdminApplication a rdfs:Class, owl:Class ;
    rdfs:subClassOf :ClientApplication ;
    spin:constructor :AdminApplicationConstructor ;
    spin:constraint [ a apl:MissingPropertyValue ;
            rdfs:label "Missing end-user application" ;
            sp:arg1 :endUserApplication
        ] ;
    rdfs:label "Admin application" ;
    rdfs:comment "Meta-application that manages the access control and sitemap of the main end-user application" ;
    rdfs:isDefinedBy : .

:AdminApplicationConstructor a sp:Construct ;
    sp:text """
      PREFIX lapp:    <https://w3id.org/atomgraph/linkeddatahub/apps/domain#>
      PREFIX xsd:     <http://www.w3.org/2001/XMLSchema#>
      PREFIX dct:     <http://purl.org/dc/terms/>

      CONSTRUCT {
          ?this dct:title [ a xsd:string ] ;
            dct:description [ a xsd:string ] ;
            lapp:endUserApplication [ a lapp:EndUserApplication ] ;
      }
      WHERE {}""" ;
    rdfs:label "Admin application constructor" ;
    rdfs:isDefinedBy : .

# CONSTRAINTS

:StartsWithHTTPS a sp:Construct ;
    rdfs:label "ldt:base starts with https://" ;
    sp:text """
PREFIX  ldt:  <https://www.w3.org/ns/ldt#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
    _:c0 a spin:ConstraintViolation .
    _:c0 spin:violationRoot ?this .
    _:c0 spin:violationPath ldt:base .
    _:c0 rdfs:label "Application base URI must start with https://" .
}
WHERE {
  ?this  ldt:base  ?base
  FILTER ( ! strstarts(str(?base), "https://") )
}""" ;
    rdfs:isDefinedBy : .

:BasePathMatchesRegex a sp:Construct ;
    rdfs:label "Base URI path does not match regex" ;
    sp:text """
PREFIX  ldt:  <https://www.w3.org/ns/ldt#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT {
    _:c0 a spin:ConstraintViolation .
    _:c0 spin:violationRoot ?this .
    _:c0 spin:violationPath ldt:base .
}
WHERE {
  ?this  ldt:base  ?base
  BIND(strafter(strafter(str(?base), "//"), "/") AS ?path)
  FILTER (!regex(?path, ?arg1, "i"))
}""" ;
    rdfs:isDefinedBy : .

:OneBasePerHostName a sp:Construct ;  # TO-DO: turn into spin:Template
    rdfs:label "One ldt:base per hostname" ;
    sp:text """
PREFIX  ldt:  <https://www.w3.org/ns/ldt#>
PREFIX  spin: <http://spinrdf.org/spin#>
PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>

CONSTRUCT 
  { 
    _:c0 a spin:ConstraintViolation .
    _:c0 spin:violationRoot ?this .
    _:c0 spin:violationPath ldt:base .
    _:c0 rdfs:label "Only one base per hostname is allowed" .
  }
WHERE
  { ?this  ldt:base  ?base
    { SELECT  ?this
      WHERE
        { ?this  ldt:base  ?base
          BIND(strbefore(strafter(str(?base), "//"), "/") AS ?hostname)
        }
      GROUP BY ?this ?hostname
      HAVING ( COUNT(?hostname) > 1 )
    }
  }""" ;
    rdfs:isDefinedBy : .
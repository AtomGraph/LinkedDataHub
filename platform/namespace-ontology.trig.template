@prefix def:	<https://w3id.org/atomgraph/linkeddatahub/default#> .
@prefix ldh:	<https://w3id.org/atomgraph/linkeddatahub#> .
@prefix ac:	<https://w3id.org/atomgraph/client#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix dh:	<https://www.w3.org/ns/ldt/document-hierarchy#> .
@prefix sd:     <http://www.w3.org/ns/sparql-service-description#> .
@prefix sp:	<http://spinrdf.org/sp#> .
@prefix sioc:	<http://rdfs.org/sioc/ns#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix dct:	<http://purl.org/dc/terms/> .
@prefix spin:	<http://spinrdf.org/spin#> .
@prefix lacl:	<https://w3id.org/atomgraph/linkeddatahub/admin/acl#> .
@prefix adm:	<https://w3id.org/atomgraph/linkeddatahub/admin#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix acl:	<http://www.w3.org/ns/auth/acl#> .
@prefix cert:	<http://www.w3.org/ns/auth/cert#> .
@prefix spin:	<http://spinrdf.org/spin#> .

# namespace ontology

<${ADMIN_BASE_URI}ontologies/namespace/>
{
    <${ADMIN_BASE_URI}ontologies/namespace/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}ontologies/> ;
        dct:title "Namespace" ;
        foaf:primaryTopic <${END_USER_BASE_URI}ns#> .

    <${END_USER_BASE_URI}ns#> a owl:Ontology ;
        rdfs:label "Namespace" ;
        rdfs:comment "Namespace of the application" ;
        foaf:isPrimaryTopicOf <${END_USER_BASE_URI}ns> ;
        owl:imports <https://w3id.org/atomgraph/linkeddatahub/default#> ;
        owl:versionInfo "1.0-SNAPSHOT" .
}

# public namespace authorization

<${ADMIN_BASE_URI}acl/authorizations/public-namespace/>
{

    <${ADMIN_BASE_URI}acl/authorizations/public-namespace/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}acl/authorizations/> ;
        dct:title "Public namespace access" ;
        foaf:primaryTopic <${ADMIN_BASE_URI}acl/authorizations/public-namespace/#this> .

    <${ADMIN_BASE_URI}acl/authorizations/public-namespace/#this> a acl:Authorization ;
        rdfs:label "Public namespace access" ;
        rdfs:comment "Allows non-authenticated access" ;
        acl:accessTo <${END_USER_BASE_URI}ns> ; # end-user ontologies are public
        acl:mode acl:Read, acl:Append ; # allow queries over GET as well as POST
        acl:agentClass foaf:Agent, acl:AuthenticatedAgent .

}

# SPARQL endpoint authorization

<${ADMIN_BASE_URI}acl/authorizations/sparql-endpoint/>
{

    <${ADMIN_BASE_URI}acl/authorizations/sparql-endpoint/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}acl/authorizations/> ;
        dct:title "SPARQL endpoint access" ;
        foaf:primaryTopic <${ADMIN_BASE_URI}acl/authorizations/sparql-endpoint/#this> .

    <${ADMIN_BASE_URI}acl/authorizations/sparql-endpoint/#this> a acl:Authorization ;
        rdfs:label "SPARQL endpoint access" ;
        rdfs:comment "Allows only authenticated access" ;
        acl:accessTo <${END_USER_BASE_URI}sparql> ;
        acl:mode acl:Read, acl:Append ; # allow queries over GET as well as POST
        acl:agentClass acl:AuthenticatedAgent .

}

# write/append authorization

<${ADMIN_BASE_URI}acl/authorizations/write-append/>
{

    <${ADMIN_BASE_URI}acl/authorizations/write-append/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}acl/authorizations/> ;
        dct:title "Write/append access" ;
        foaf:primaryTopic <${ADMIN_BASE_URI}acl/authorizations/write-append/#this> .

    <${ADMIN_BASE_URI}acl/authorizations/write-append/#this> a acl:Authorization ;
        rdfs:label "Write/append access" ;
        rdfs:comment "Allows write access to all documents and containers" ;
        acl:accessToClass dh:Item, dh:Container, def:Root ;
        acl:accessTo <${END_USER_BASE_URI}sparql>, <${END_USER_BASE_URI}importer>, <${END_USER_BASE_URI}add>, <${END_USER_BASE_URI}generate>, <${END_USER_BASE_URI}ns> ;
        acl:mode acl:Write, acl:Append ;
        acl:agentGroup <${ADMIN_BASE_URI}acl/groups/owners/#this>, <${ADMIN_BASE_URI}acl/groups/writers/#this> .

}

# full access authorization

<${ADMIN_BASE_URI}acl/authorizations/full-control/>
{

    <${ADMIN_BASE_URI}acl/authorizations/full-control/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}acl/authorizations/> ;
        dct:title "Full control" ;
        foaf:primaryTopic <${ADMIN_BASE_URI}acl/authorizations/full-control/#this> .

    <${ADMIN_BASE_URI}acl/authorizations/full-control/#this> a acl:Authorization ;
        rdfs:label "Full control" ;
        rdfs:comment "Allows full read/write access to all application resources" ;
        acl:accessToClass dh:Item, dh:Container, def:Root ;
        acl:accessTo <${END_USER_BASE_URI}sparql>, <${END_USER_BASE_URI}importer>, <${END_USER_BASE_URI}add>, <${END_USER_BASE_URI}generate>, <${END_USER_BASE_URI}ns> ;
        acl:mode acl:Read, acl:Append, acl:Write, acl:Control ;
        acl:agentGroup <${ADMIN_BASE_URI}acl/groups/owners/#this> .

}

# read access

<${ADMIN_BASE_URI}acl/authorizations/read/>
{

    <${ADMIN_BASE_URI}acl/authorizations/read/> a dh:Item ;
        sioc:has_container <${ADMIN_BASE_URI}acl/authorizations/> ;
        dct:title "Read access" ;
        foaf:primaryTopic <${ADMIN_BASE_URI}acl/authorizations/read/#this> .

    <${ADMIN_BASE_URI}acl/authorizations/read/#this> a acl:Authorization ;
        rdfs:label "Read access" ;
        rdfs:comment "Allows read access to all resources" ;
        acl:accessToClass dh:Item, dh:Container, def:Root, <http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#FileDataObject> ;
        acl:accessTo <${END_USER_BASE_URI}sparql> ;
        acl:mode acl:Read ;
        acl:agentGroup <${ADMIN_BASE_URI}acl/groups/owners/#this>, <${ADMIN_BASE_URI}acl/groups/writers/#this>, <${ADMIN_BASE_URI}acl/groups/readers/#this> .

}

events { 
    worker_connections 1024;
}

http {
    upstream linkeddatahub {
        server $UPSTREAM_SERVER:$UPSTREAM_HTTP_PORT;
    }

    server {
        # limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;
        # limit_req zone=mylimit;

        listen $SERVER_HTTPS_PORT ssl;
        server_name $SERVER_NAME;
        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_session_cache shared:SSL:1m;  
        ssl_prefer_server_ciphers on;
        ssl_verify_client optional_no_ca;

        location / {
            proxy_pass http://linkeddatahub;
            #proxy_cache backcache;

            set_by_lua_block $webid_uri {
                local openssl = require('openssl')

                webIDs = {}
                for k,v in pairs(openssl.x509.read(ngx.var.ssl_client_raw_cert):extensions()) do
                    for k1,v1 in pairs(v:info()) do
                        if(type(v1)=='table') then
                            for k2,v2 in pairs(v1) do
                                if(type(v2)=='table') then
                                    for k3,v3 in pairs(v2) do
                                        if(k3=='uniformResourceIdentifier') then
                                            table.insert(webIDs, v3:data())
                                        end
                                    end
                                end
                            end
                        end
                    end
                end

                return webIDs[1]
            }

            proxy_set_header X-WebID-URI $webid_uri;
        }
    }

    server {
        listen $SERVER_HTTP_PORT;
        server_name $SERVER_NAME;
    
        location / {
            return 301 https://$server_name:$SERVER_HTTPS_PORT$request_uri;
        }
    }

}
@prefix ns:	<model/ontologies/namespace/#> .
@prefix nsd:	<model/ontologies/domain/#> .
@prefix nsdd:	<model/ontologies/default/#> .
@prefix nsds:	<model/ontologies/system/#> .
@prefix adm:	<https://w3id.org/atomgraph/linkeddatahub/admin/domain#> .
@prefix lacl:	<https://w3id.org/atomgraph/linkeddatahub/admin/acl/domain#> .
@prefix lsm:	<https://w3id.org/atomgraph/linkeddatahub/admin/sitemap/domain#> .
@prefix apl:	<https://w3id.org/atomgraph/linkeddatahub/domain#> .
@prefix a:	<https://w3id.org/atomgraph/core#> .
@prefix rdf:	<http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:	<http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd:	<http://www.w3.org/2001/XMLSchema#> .
@prefix owl:	<http://www.w3.org/2002/07/owl#> .
@prefix acl:	<http://www.w3.org/ns/auth/acl#> .
@prefix cert:	<http://www.w3.org/ns/auth/cert#> .
@prefix ldt:	<https://www.w3.org/ns/ldt#> .
@prefix c:	<https://www.w3.org/ns/ldt/core/domain#> .
@prefix dh:	<https://www.w3.org/ns/ldt/document-hierarchy/domain#> .
@prefix sp:	<http://spinrdf.org/sp#> .
@prefix spin:	<http://spinrdf.org/spin#> .
@prefix sioc:	<http://rdfs.org/sioc/ns#> .
@prefix foaf:	<http://xmlns.com/foaf/0.1/> .
@prefix dct:	<http://purl.org/dc/terms/> .

<>
{

    <> a adm:Container ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Root" ;
        dct:description "Root container" .

}

<search/>
{

    <search/> a adm:Container ;
        # dh:select <queries/default/select-labelled/#this> ;
        dct:title "Search" ;
        dct:description "Search resources by label" .

}

<queries/>
{

    <queries/> a adm:Container ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Queries" ;
        dct:description "SPARQL queries" .

}

<queries/default/>
{

    <queries/default/> a adm:Container ;
        sioc:has_parent <queries/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Default" ;
        dct:description "Default queries" .

}

<sign%20up>
{

    <sign%20up> a adm:SignUp ;
        dct:title "Sign up" ;
        apl:content <sign%20up#content> .

    <sign%20up#content> a apl:Content ;
        rdf:first """<div xmlns="http://www.w3.org/1999/xhtml">
    <p class="lead">Welcome. Create your free account and join the web of data.</p>
    <p>LinkedDataHub uses WebID as the single sign-on (SSO) protocol for distributed applications, which is based on
        authentication using client certficates. <a href="http://webid.info">Read more about WebID</a>.</p>
    <div class="alert alert-info">
        <p>Unlike most LinkedDataHub resources, your WebID profile will have <em>public access</em> as required by the
        protocol. We will hide your email address however.</p>
    </div>
    </div>"""^^rdf:XMLLiteral ;
        rdf:rest rdf:nil .

}

<request%20access>
{

    <request%20access> a adm:RequestAccess ;
        dct:title "Request access" ;
        apl:content <request%20access#content> .

    <request%20access#content> a apl:Content ;
        rdf:first """<div xmlns="http://www.w3.org/1999/xhtml">
    <p class="lead">Request access</p>
    <p>Ask for access to a restricted resource by making a request. It will be reviewed by the application's
        administrators.</p>
    </div>"""^^rdf:XMLLiteral ;
        rdf:rest rdf:nil .

}

<oauth2/login>
{

    <oauth2/login> a adm:OAuth2Login ;
        dct:title "OAuth 2.0 login" .

}

<oauth2/authorize/google>
{

    <oauth2/authorize/google> a adm:AuthorizeGoogle ;
        dct:title "Google OAuth2.0 authorization" .

}

# QUERIES

# select children

<queries/default/select-children/>
{

    <queries/default/select-children/> a adm:QueryItem ;
        sioc:has_container <queries/default/> ;
        dct:title "Select children" ;
        foaf:primaryTopic <queries/default/select-children/#this> .

    <queries/default/select-children/#this> a adm:Select ;
        foaf:isPrimaryTopicOf <queries/default/select-children/> ;
        dct:title "Select children" ;
        sp:text """
    PREFIX  dct:  <http://purl.org/dc/terms/>
    PREFIX  sioc: <http://rdfs.org/sioc/ns#>
    PREFIX  foaf: <http://xmlns.com/foaf/0.1/>

    SELECT DISTINCT  ?child ?title ?thing
    WHERE
    { GRAPH ?childGraphGraph
      {   { ?child  sioc:has_parent  ?this }
        UNION
          { ?child  sioc:has_container  ?this }
      }
    GRAPH ?childGraph
      { ?child  a                     ?Type
        OPTIONAL
          { ?child  dct:title  ?title }
        OPTIONAL
          { ?child  foaf:primaryTopic ?thing }
      }
    }
    """ .

}

# select labelled

<queries/default/select-labelled/>
{

    <queries/default/select-labelled/> a adm:QueryItem ;
        sioc:has_container <queries/default/> ;
        dct:title "Select labelled" ;
        foaf:primaryTopic <queries/default/select-labelled/#this> .

    <queries/default/select-labelled/#this> a adm:Select ;
        foaf:isPrimaryTopicOf <queries/default/select-labelled/> ;
        dct:title "Select labelled" ;
        sp:text """
    PREFIX  dct:  <http://purl.org/dc/terms/>
    PREFIX  rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    PREFIX  skos: <http://www.w3.org/2004/02/skos/core#>
    PREFIX  rdfs: <http://www.w3.org/2000/01/rdf-schema#>
    PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
    PREFIX  sioc: <http://rdfs.org/sioc/ns#>
    PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

    SELECT DISTINCT  ?resource ?label
    WHERE
    { GRAPH ?graph
      { ?resource a ?Type .
        ?resource (((((((rdfs:label|dc:title)|dct:title)|foaf:name)|foaf:givenName)|foaf:familyName)|sioc:name)|skos:prefLabel)|sioc:content ?label
        FILTER isURI(?resource)
        OPTIONAL
          { ?resource  dct:created  ?created }
      }
    }""" .

}

### ACL ###

<acl/>
{

    <acl/> a adm:Container ;
        sioc:has_parent <> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Access control" ;
        dct:description "Manage agents, user accounts and authorizations" .

}

<acl/authorizations/>
{

    <acl/authorizations/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Authorizations" ;
        dct:description "Manage who has access to which resources" .

}

<acl/authorization-requests/>
{

    <acl/authorization-requests/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Authorization requests" ;
        dct:description "Manage who has access to which resources" .

}

<acl/agents/>
{

    <acl/agents/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Agents" ;
        dct:description "Manage people and software agents that have access" .

}

<acl/public-keys/>
{

    <acl/public-keys/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Public keys" ;
        dct:description "Manage RSA public keys" .

}

<acl/users/>
{

    <acl/users/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Users" ;
        dct:description "Manage agent user accounts and credentials" .

}

<acl/groups/>
{

    <acl/groups/> a adm:Container ;
        sioc:has_parent <acl/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Groups" ;
        dct:description "Manage agent groups that have access" .

}

# AUTHORIZATIONS

# public

<acl/authorizations/public/>
{

    <acl/authorizations/public/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Public access" ;
        foaf:primaryTopic <acl/authorizations/public/#this> .

    <acl/authorizations/public/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/public/> ;
        rdfs:label "Public access" ;
        rdfs:comment "Allows unauthorized access" ;
        acl:accessTo <model/ontologies/namespace/>, <model/ontologies/default/>, <model/ontologies/system/>, <model/ontologies/domain/> ; # end-user ontologies are public
        acl:accessToClass adm:AgentItem, adm:PublicKeyItem ;
        acl:mode acl:Read ;
        acl:agentClass foaf:Agent, acl:AuthenticatedAgent .

}

# sign up

<acl/authorizations/sign-up/>
{

    <acl/authorizations/sign-up/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Signup access" ;
        foaf:primaryTopic <acl/authorizations/sign-up/#this> .

    <acl/authorizations/sign-up/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/sign-up/> ;
        rdfs:label "Signup access" ;
        rdfs:comment "Required to enable public signup" ;
        acl:accessToClass adm:SignUp ;
        acl:mode acl:Read, acl:Append ;
        acl:agentClass foaf:Agent .

}

# request access

<acl/authorizations/request-access/>
{

    <acl/authorizations/request-access/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Authorization request access" ;
        foaf:primaryTopic <acl/authorizations/request-access/#this> .

    <acl/authorizations/request-access/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/request-access/> ;
        rdfs:label "Request access" ;
        rdfs:comment "Required to enable authorization requests" ;
        acl:accessToClass adm:RequestAccess ;
        acl:mode acl:Read, acl:Append ;
        acl:agentClass acl:AuthenticatedAgent . # not public, Agent must be authenticated

}

# OAuth2 login

<acl/authorizations/oauth2-login/>
{

    <acl/authorizations/oauth2-login/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "OAuth2 login access" ;
        foaf:primaryTopic <acl/authorizations/oauth2-login/#this> .

    <acl/authorizations/oauth2-login/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/oauth2-login/> ;
        rdfs:label "OAuth2 login access" ;
        rdfs:comment "Required to enable public OAuth2 login" ;
        acl:accessToClass adm:OAuth2Login ;
        acl:mode acl:Read ;
        acl:agentClass foaf:Agent .

}

# Google authorization

<acl/authorizations/authorize-google/>
{

    <acl/authorizations/authorize-google/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Google's OAuth2 authorization" ;
        foaf:primaryTopic <acl/authorizations/authorize-google/#this> .

    <acl/authorizations/authorize-google/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/authorize-google/> ;
        rdfs:label "Google's OAuth2 authorization" ;
        rdfs:comment "Required to enable public OAuth2 login" ;
        acl:accessToClass adm:AuthorizeGoogle ;
        acl:mode acl:Read ;
        acl:agentClass foaf:Agent .

}

# append authorization request

<acl/authorizations/append-request/>
{

    <acl/authorizations/append-request/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Append authorization request" ;
        foaf:primaryTopic <acl/authorizations/append-request/#this> .

    <acl/authorizations/append-request/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/append-request/> ;
        rdfs:label "Append authorization request" ;
        rdfs:comment "Required to enable authorization requests" ;
        acl:accessTo <acl/authorization-requests/> ;
        acl:mode acl:Append ;
        acl:agentClass acl:AuthenticatedAgent . # not public, Agent must be authenticated

}

# full access


<acl/authorizations/full-control/>
{

    <acl/authorizations/full-control/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Full control" ;
        foaf:primaryTopic <acl/authorizations/full-control/#this> .

    <acl/authorizations/full-control/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/full-control/> ;
        rdfs:label "Full control" ;
        rdfs:comment "Allows full read/write access to all application resources" ;
        acl:accessToClass dh:Item, dh:Container ;
        acl:accessTo <../sparql>, <../service>, <../uploads>, <../imports>, <../add>, <../clone> ;
        acl:mode acl:Read, acl:Append, acl:Write, acl:Control ;
        acl:agentClass <acl/groups/owners/#this> .

}

# write/append access

<acl/authorizations/write-append/>
{

    <acl/authorizations/write-append/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Write/append access" ;
        foaf:primaryTopic <acl/authorizations/write-append/#this> .

    <acl/authorizations/write-append/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/write-append/> ;
        rdfs:label "Write/append access" ;
        rdfs:comment "Allows write access to all documents and containers" ;
        acl:accessToClass dh:Item, dh:Container ;
        acl:accessTo <../sparql>, <../service>, <../uploads>, <../imports>, <../add>, <../clone> ;
        acl:mode acl:Write, acl:Append ;
        acl:agentClass <acl/groups/owners/#this>, <acl/groups/writers/#this> .

}

# read access

<acl/authorizations/read/>
{

    <acl/authorizations/read/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Read access" ;
        foaf:primaryTopic <acl/authorizations/read/#this> .

    <acl/authorizations/read/#this> a adm:Authorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/read/> ;
        rdfs:label "Read access" ;
        rdfs:comment "Allows read access to all resources" ;
        acl:accessToClass c:Document, dh:Item, dh:Container, apl:File ;
        acl:accessTo <../sparql>, <../service>, <../uploads>, <../imports>, <../add>, <../clone> ;
        acl:mode acl:Read ;
        acl:agentClass <acl/groups/owners/#this>, <acl/groups/writers/#this>, <acl/groups/readers/#this> .

}

# creator access

<acl/authorizations/creator/>
{

    <acl/authorizations/creator/> a adm:AuthorizationItem ;
        sioc:has_container <acl/authorizations/> ;
        dct:title "Creator access" ;
        foaf:primaryTopic <acl/authorizations/creator/#this> .

    <acl/authorizations/creator/#this> a adm:CreatorAuthorization ;
        foaf:isPrimaryTopicOf <acl/authorizations/creator/> ;
        rdfs:label "Creator access" ;
        rdfs:comment "Creators have full control of their created resources" ;
        lacl:accessProperty foaf:maker ;
        acl:accessToClass dh:Item, dh:Container ;
        acl:agentClass acl:AuthenticatedAgent .

}

# GROUPS

# owners

<acl/groups/owners/>
{

    <acl/groups/owners/> a adm:GroupItem ;
        sioc:has_container <acl/groups/> ;
        dct:title "Owners" ;
        foaf:primaryTopic <acl/groups/owners/#this> .

    <acl/groups/owners/#this> a adm:Group ;
        foaf:name "Owners" ;
        dct:description "Group of agents that own the application" ;
        foaf:isPrimaryTopicOf <acl/groups/owners/> .

}

# writers

<acl/groups/writers/>
{

    <acl/groups/writers/> a adm:GroupItem ;
        sioc:has_container <acl/groups/> ;
        dct:title "Writers" ;
        foaf:primaryTopic <acl/groups/writers/#this> .

    <acl/groups/writers/#this> a adm:Group ;
        foaf:name "Writers" ;
        dct:description "Group of agents that have write access" ;
        foaf:isPrimaryTopicOf <acl/groups/writers/> .

}

# readers

<acl/groups/readers/>
{

    <acl/groups/readers/> a adm:GroupItem ;
        sioc:has_container <acl/groups/> ;
        dct:title "Readers" ;
        foaf:primaryTopic <acl/groups/readers/#this> .

    <acl/groups/readers/#this> a adm:Group ;
        foaf:name "Readers" ;
        dct:description "Group of agents that have read access" ;
        foaf:isPrimaryTopicOf <acl/groups/readers/> .

}

### MODEL ###

# CONTAINERS

<model/>
{

    <model/> a adm:Container ;
        sioc:has_parent <> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Model" ;
        dct:description "Manage application model: classes, properties, constraints etc." .

}

<model/ontologies/>
{

    <model/ontologies/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Ontologies" ;
        dct:description "Manage ontologies that define application domain" .

}

<model/queries/>
{

    <model/queries/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Queries" ;
        dct:description "Manage SPARQL queries that are used by constructors and constraints" .

}

<model/queries/default/>
{

    <model/queries/default/> a adm:Container ;
        sioc:has_parent <model/queries/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Default" ;
        dct:description "Queries of the Default ontology" .

}

<model/classes/>
{

    <model/classes/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Classes" ;
        dct:description "Manage application classes to define the domain model" .

}

<model/classes/default/>
{

    <model/classes/default/> a adm:Container ;
        sioc:has_parent <model/classes/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Default" ;
        dct:description "Classes of the Default ontology" .

}

<model/properties/>
{

    <model/properties/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Properties" ;
        dct:description "Manage properties of the domain model" .

}

<model/constraints/>
{

    <model/constraints/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Constraints" ;
        dct:description "Manage SPIN constraints to control the quality of incoming data" .

}

<model/constraints/default/>
{

    <model/constraints/default/> a adm:Container ;
        sioc:has_parent <model/constraints/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Default" ;
        dct:description "Constraints of the Default ontology" .

}

<model/restrictions/>
{

    <model/restrictions/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Restrictions" ;
        dct:description "Manage OWL restrictions on properties" .

}

<model/restrictions/namespace/>
{

    <model/restrictions/namespace/> a adm:Container ;
        sioc:has_parent <model/restrictions/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Namespace" ;
        dct:description "Restrictions of the Namespace ontology" .

}

<model/command-templates/>
{

    <model/command-templates/> a adm:Container ;
        sioc:has_parent <model/> ;
        # dh:select <queries/default/select-children/#this> ;
        dct:title "Command templates" ;
        dct:description "Manage SPIN command templates that can be used instead of SPARQL queries and updates" .

}

# ONTOLOGIES

# default

<model/ontologies/default/>
{

    <model/ontologies/default/> a adm:OntologyItem ;
        sioc:has_container <model/ontologies/> ;
        dct:title "Default" ;
        foaf:primaryTopic nsdd: .

    nsdd: a adm:Ontology ;
        foaf:isPrimaryTopicOf <model/ontologies/default/>, <../ns/domain/default> ;
        rdfs:label "Default" ;
        rdfs:comment "Default document model" ;
        owl:imports apl: ;
        owl:versionInfo "1.0-SNAPSHOT" .

}

# domain

<model/ontologies/domain/>
{

    <model/ontologies/domain/> a adm:OntologyItem ;
        sioc:Domain <model/ontologies/> ;
        dct:title "Default" ;
        foaf:primaryTopic nsd: .

    nsd: a adm:Ontology ;
        foaf:isPrimaryTopicOf <model/ontologies/domain/> ;
        rdfs:label "Domain" ;
        rdfs:comment "Domain ontology of the application" ;
        owl:versionInfo "1.0-SNAPSHOT" .

    nsdd:Root a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/root/> ;
        rdfs:subClassOf sioc:Space, dh:Container ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ; # roots do not have parents, therefore no nsdd:MissingParent
        apl:template nsdd:ContainerChildren ;
        rdfs:label "Root" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Container a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/container/> ;
        rdfs:subClassOf dh:Container ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingParent, nsdd:MissingTitle ;
        apl:template nsdd:ContainerChildren ;
        rdfs:label "Container" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:ContainerChildren a apl:Content ;
        rdf:first <../queries/default/select-children/#this> ;
        rdf:rest rdf:nil ;
        rdfs:label "Container children" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Item a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/item/> ;
        rdfs:subClassOf dh:Item ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingContainer ;
        rdfs:label "Item" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:GenericService a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/generic-service/> ;
        rdfs:subClassOf apl:GenericService ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "Generic service" ;
        rdfs:comment "A service is a SPARQL 1.1 service providing queries and updates over an RDF dataset. It is accessible as HTTP Protocol and Graph Store Protocol endpoints." ;
        rdfs:isDefinedBy nsdd: .

    nsdd:DydraService a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/dydra-service/> ;
        rdfs:subClassOf apl:DydraService ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "Dydra service" ;
        rdfs:comment "Dydra cloud repository" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:File a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/file/> ;
        rdfs:subClassOf apl:File ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "File" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Construct a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/construct/> ;
        rdfs:subClassOf apl:Construct ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "CONSTRUCT" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Describe a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/describe/> ;
        rdfs:subClassOf apl:Describe ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "DESCRIBE" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Select a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/select/> ;
        rdfs:subClassOf apl:Select ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "SELECT" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:Ask a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/ask/> ;
        rdfs:subClassOf apl:Ask ;
        spin:constructor nsdd:TitleConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "ASK" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:RDFImport a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/rdf-import/> ;
        rdfs:subClassOf apl:RDFImport ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "RDF import" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:CSVImport a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/csv-import/> ;
        rdfs:subClassOf apl:CSVImport ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "CSV import" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:GraphChart a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/graph-chart/> ;
        rdfs:subClassOf apl:GraphChart ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "Graph chart" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:ResultSetChart a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/default/result-set-chart/> ;
        rdfs:subClassOf apl:ResultSetChart ;
        spin:constructor nsdd:TitleConstructor, nsdd:ContentConstructor ;
        spin:constraint nsdd:MissingTitle ;
        rdfs:label "Result set chart" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:TitleConstructor a adm:Construct ;
        foaf:isPrimaryTopicOf <model/queries/default/title-constructor/> ;
        rdfs:label "Title constructor" ;
        sp:text """
            PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            PREFIX xsd:     <http://www.w3.org/2001/XMLSchema#>
            PREFIX dct:     <http://purl.org/dc/terms/>

            CONSTRUCT {
              ?this dct:title [ a xsd:string ] .
            }
            WHERE {}""" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:DescriptionConstructor a adm:Construct ;
        foaf:isPrimaryTopicOf <model/queries/default/description-constructor/> ;
        rdfs:label "Description constructor" ;
        sp:text """
            PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
            PREFIX xsd:     <http://www.w3.org/2001/XMLSchema#>
            PREFIX dct:     <http://purl.org/dc/terms/>

            CONSTRUCT {
              ?this dct:description [ a xsd:string ] .
            }
            WHERE {}""" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:ContentConstructor a adm:Construct ;
        foaf:isPrimaryTopicOf <model/queries/default/content-constructor/> ;
        rdfs:label "Content constructor" ;
        sp:text """
            PREFIX apl:     <https://w3id.org/atomgraph/linkeddatahub/domain#>

            CONSTRUCT {
              ?this apl:content [ a apl:Content ] .
            }
            WHERE {}""" ;
        rdfs:isDefinedBy nsdd: .

    nsdd:MissingParent a adm:MissingPropertyValue ;
        foaf:isPrimaryTopicOf <model/constraints/default/missing-parent/> ;
        rdfs:label "Missing parent" ;
        rdfs:comment "Requires containers to have a parent container" ;
        sp:arg1 sioc:has_parent ;
        rdfs:isDefinedBy nsdd: .

    nsdd:MissingContainer a adm:MissingPropertyValue ;
        foaf:isPrimaryTopicOf <model/constraints/default/missing-container/> ;
        rdfs:label "Missing container" ;
        rdfs:comment "Requires items to have a parent container" ;
        sp:arg1 sioc:has_container ;
        rdfs:isDefinedBy nsdd: .

    nsdd:MissingTitle a adm:MissingPropertyValue ;
        foaf:isPrimaryTopicOf <model/constraints/default/missing-title/> ;
        rdfs:label "Missing title" ;
        rdfs:comment "Requires resources to have a title from Dublin Core Terms vocabulary" ;
        sp:arg1 dct:title ;
        rdfs:isDefinedBy nsdd: .

}

# ONTOLOGIES

# namespace

<model/ontologies/namespace/>
{

    <model/ontologies/namespace/> a adm:OntologyItem ;
        sioc:has_container <model/ontologies/> ;
        dct:title "Namespace" ;
        foaf:primaryTopic ns: .

    ns: a adm:Ontology ;
        foaf:isPrimaryTopicOf <model/ontologies/namespace/> ;
        rdfs:label "Namespace" ;
        rdfs:comment "Namespace of the application" ;
        owl:imports nsd:, nsds: ;
        owl:versionInfo "1.0-SNAPSHOT" .

}

# system

<model/ontologies/system/>
{

    <model/ontologies/system/> a adm:OntologyItem ;
        sioc:has_container <model/ontologies/> ;
        dct:title "System domain" ;
        foaf:primaryTopic nsds: .

    nsds: a adm:Ontology ;
        foaf:isPrimaryTopicOf <model/ontologies/system/> ;
        rdfs:label "System domain" ;
        rdfs:comment "System ontology of the application" ;
        owl:imports nsdd: ;
        owl:versionInfo "1.0-SNAPSHOT" .

    nsds:GenericService a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/services/generic/> ;
        rdfs:subClassOf nsdd:GenericService, nsds:TopicOfServiceItem ;
        ldt:path "{isPrimaryTopicOf.slug}/" ;
        ldt:fragment "this" ;
        rdfs:label "Generic service" ;
        rdfs:comment "A service is a SPARQL 1.1 service providing queries and updates over an RDF dataset. It is accessible as HTTP Protocol and Graph Store Protocol endpoints." ;
        rdfs:isDefinedBy nsds: .

    nsds:DydraService a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/services/dydra/> ;
        rdfs:subClassOf nsdd:DydraService, nsds:TopicOfServiceItem ;
        ldt:path "{isPrimaryTopicOf.slug}/" ;
        ldt:fragment "this" ;
        rdfs:label "Dydra service" ;
        rdfs:comment "Dydra cloud repository" ;
        rdfs:isDefinedBy nsds: .

    nsds:ServiceItem a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/services/service-item/> ;
        rdfs:subClassOf nsdd:Item, nsds:ItemOfServiceContainer ; # nsdd:Item, nsds:ItemOfServiceContainer ;
        rdfs:label "Service item" ;
        rdfs:isDefinedBy nsds: .

    nsds:File a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/file/> ;
        rdfs:subClassOf nsdd:File, nsds:TopicOfFileItem, nsds:ItemOfFileContainer ;
        rdfs:label "File" ;
        rdfs:comment "A document that represents an uploaded file" ;
        rdfs:isDefinedBy nsds: .

    nsds:FileItem a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/file-item/> ;
        rdfs:subClassOf nsdd:Item, nsds:ItemOfFilesContainer ;
        rdfs:label "File item" ;
        rdfs:isDefinedBy nsds: .

    nsds:RDFImport a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/rdf-import/> ;
        rdfs:subClassOf nsdd:RDFImport, nsds:TopicOfImportItem ;
        rdfs:label "RDF import" ;
        rdfs:isDefinedBy nsds: .

    nsds:CSVImport a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/csv-import/> ;
        rdfs:subClassOf nsdd:CSVImport, nsds:TopicOfImportItem ;
        rdfs:label "CSV import" ;
        rdfs:isDefinedBy nsds: .

    nsds:ImportItem a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/import-item/> ;
        rdfs:subClassOf nsdd:Item, nsds:ItemOfImportsContainer ;
        rdfs:label "Import item" ;
        rdfs:isDefinedBy nsds: .

    nsds:Construct a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/construct/> ;
        rdfs:subClassOf nsdd:Construct, nsds:TopicOfQueryItem ;
        rdfs:label "CONSTRUCT" ;
        rdfs:isDefinedBy nsds: .

    nsds:Describe a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/describe/> ;
        rdfs:subClassOf nsdd:Describe, nsds:TopicOfQueryItem ;
        rdfs:label "DESCRIBE" ;
        rdfs:isDefinedBy nsds: .

    nsds:Select a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/select/> ;
        rdfs:subClassOf nsdd:Select, nsds:TopicOfQueryItem ;
        rdfs:label "SELECT" ;
        rdfs:isDefinedBy nsds: .

    nsds:Ask a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/ask/> ;
        rdfs:subClassOf nsdd:Ask, nsds:TopicOfQueryItem ;
        rdfs:label "ASK" ;
        rdfs:isDefinedBy nsds: .

    nsds:QueryItem a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/query-item/> ;
        rdfs:subClassOf nsdd:Item, nsds:ItemOfQueriesContainer ;
        rdfs:label "Query item" ;
        rdfs:isDefinedBy nsds: .

    nsds:GraphChart a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/graph-chart/> ;
        rdfs:subClassOf nsdd:GraphChart, nsds:TopicOfChartItem ;
        rdfs:label "Graph chart" ;
        rdfs:isDefinedBy nsds: .

    nsds:ResultSetChart a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/result-set-chart/> ;
        rdfs:subClassOf nsdd:ResultSetChart, nsds:TopicOfChartItem ;
        rdfs:label "Result set chart" ;
        rdfs:isDefinedBy nsds: .

    nsds:ChartItem a adm:Class ;
        foaf:isPrimaryTopicOf <model/classes/domain/chart-item/> ;
        rdfs:subClassOf nsdd:Item, nsds:ItemOfChartsContainer ;
        rdfs:label "Chart item" ;
        rdfs:isDefinedBy nsds: .

    nsds:TopicOfServiceItem a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/topic-of-service-item/> ;
        owl:onProperty foaf:isPrimaryTopicOf ;
        owl:allValuesFrom nsds:ServiceItem ;
        rdfs:label "Topic of service item" ;
        rdfs:isDefinedBy nsds: .

    nsds:TopicOfQueryItem a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/topic-of-query-item/> ;
        owl:onProperty foaf:isPrimaryTopicOf ;
        owl:allValuesFrom nsds:QueryItem ;
        rdfs:label "Topic of query item" ;
        rdfs:isDefinedBy nsds: .

    nsds:TopicOfImportItem a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/topic-of-import-item/> ;
        owl:onProperty foaf:isPrimaryTopicOf ;
        owl:allValuesFrom nsds:ImportItem ;
        rdfs:label "Topic of import item" ;
        rdfs:isDefinedBy nsds: .

    nsds:TopicOfFileItem a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/topic-of-file-item/> ;
        owl:onProperty foaf:isPrimaryTopicOf ;
        owl:allValuesFrom nsds:FileItem ;
        rdfs:label "Topic of file item" ;
        rdfs:isDefinedBy nsds: .

    nsds:TopicOfChartItem a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/topic-of-chart-item/> ;
        owl:onProperty foaf:isPrimaryTopicOf ;
        owl:allValuesFrom nsds:ChartItem ;
        rdfs:label "Topic of chart item" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfServiceContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/services-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../services/> ;
        rdfs:label "Has services container" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfFileContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/uploads-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../uploads/> ;
        rdfs:label "Has uploads container" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfImportsContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/imports-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../imports/> ;
        rdfs:label "Has imports container" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfFilesContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/files-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../files/> ;
        rdfs:label "Has files container" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfQueriesContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/queries-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../queries/> ;
        rdfs:label "Has queries container" ;
        rdfs:isDefinedBy nsds: .

    nsds:ItemOfChartsContainer a adm:Restriction ;
        foaf:isPrimaryTopicOf <model/restrictions/domain/charts-container/> ;
        owl:onProperty sioc:has_container ;
        owl:hasValue <../charts/> ;
        rdfs:label "Has charts container" ;
        rdfs:isDefinedBy nsds: .

}
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Rate limiting: 5 requests per second per IP
    limit_req_zone $binary_remote_addr zone=api_ratelimit:10m rate=5r/s;
    limit_req_status 429;

    upstream varnish_backend {
        server ${UPSTREAM_SERVER}:${UPSTREAM_HTTP_PORT};
    }

    server {
        listen ${SERVER_HTTP_PORT};

        # Health check path
        location = /healthz {
            return 200 'ok';
            add_header Content-Type text/plain;
        }

        location / {
            # Apply rate limiting with burst buffer
            limit_req zone=api_ratelimit burst=10;
            # Optional: tell clients how long to wait (1s = 5r/s baseline)
            add_header Retry-After 1 always;

            proxy_pass http://varnish_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
